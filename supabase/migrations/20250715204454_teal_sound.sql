/*
  # Corregir pol√≠ticas duplicadas para user_emotion_log
  
  Este script corrige el error "policy already exists" verificando
  primero si las pol√≠ticas existen antes de intentar crearlas.
  
  ## Cambios:
  - Verifica si cada pol√≠tica existe antes de crearla
  - Mantiene la misma funcionalidad que las pol√≠ticas originales
  - Evita errores de duplicaci√≥n
*/

-- Eliminar pol√≠ticas solo si existen
DROP POLICY IF EXISTS "Users can view own emotion logs" ON user_emotion_log;
DROP POLICY IF EXISTS "Users can insert own emotion logs" ON user_emotion_log;
DROP POLICY IF EXISTS "Users can update own emotion logs" ON user_emotion_log;
DROP POLICY IF EXISTS "Users can delete own emotion logs" ON user_emotion_log;

-- Crear pol√≠ticas RLS solo si no existen
DO $$
BEGIN
  -- Pol√≠tica para SELECT
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE tablename = 'user_emotion_log' 
    AND policyname = 'Users can view own emotion logs'
  ) THEN
    CREATE POLICY "Users can view own emotion logs" ON user_emotion_log
      FOR SELECT TO authenticated
      USING (auth.uid() = user_id);
    RAISE NOTICE 'Pol√≠tica SELECT creada';
  ELSE
    RAISE NOTICE 'Pol√≠tica SELECT ya existe, omitiendo';
  END IF;

  -- Pol√≠tica para INSERT
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE tablename = 'user_emotion_log' 
    AND policyname = 'Users can insert own emotion logs'
  ) THEN
    CREATE POLICY "Users can insert own emotion logs" ON user_emotion_log
      FOR INSERT TO authenticated
      WITH CHECK (auth.uid() = user_id);
    RAISE NOTICE 'Pol√≠tica INSERT creada';
  ELSE
    RAISE NOTICE 'Pol√≠tica INSERT ya existe, omitiendo';
  END IF;

  -- Pol√≠tica para UPDATE
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE tablename = 'user_emotion_log' 
    AND policyname = 'Users can update own emotion logs'
  ) THEN
    CREATE POLICY "Users can update own emotion logs" ON user_emotion_log
      FOR UPDATE TO authenticated
      USING (auth.uid() = user_id)
      WITH CHECK (auth.uid() = user_id);
    RAISE NOTICE 'Pol√≠tica UPDATE creada';
  ELSE
    RAISE NOTICE 'Pol√≠tica UPDATE ya existe, omitiendo';
  END IF;

  -- Pol√≠tica para DELETE
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE tablename = 'user_emotion_log' 
    AND policyname = 'Users can delete own emotion logs'
  ) THEN
    CREATE POLICY "Users can delete own emotion logs" ON user_emotion_log
      FOR DELETE TO authenticated
      USING (auth.uid() = user_id);
    RAISE NOTICE 'Pol√≠tica DELETE creada';
  ELSE
    RAISE NOTICE 'Pol√≠tica DELETE ya existe, omitiendo';
  END IF;
END $$;

-- Verificaci√≥n
DO $$
DECLARE
  policy_count integer;
BEGIN
  SELECT COUNT(*) INTO policy_count FROM pg_policies WHERE tablename = 'user_emotion_log';
  
  RAISE NOTICE '‚úÖ Tabla user_emotion_log tiene % pol√≠ticas', policy_count;
  RAISE NOTICE '‚úÖ Problema de pol√≠ticas duplicadas resuelto';
  RAISE NOTICE 'üéØ La tabla user_emotion_log est√° lista para su uso';
END $$;